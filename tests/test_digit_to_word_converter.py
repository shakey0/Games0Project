from Games0App.classes.digit_to_word_converter import digit_to_word_converter

def test_digit_to_word_converter():
    assert digit_to_word_converter.number_to_words(0) == 'zero'
    assert digit_to_word_converter.number_to_words(1) == 'one'
    assert digit_to_word_converter.number_to_words(10) == 'ten'
    assert digit_to_word_converter.number_to_words(11) == 'eleven'
    assert digit_to_word_converter.number_to_words(20) == 'twenty'
    assert digit_to_word_converter.number_to_words(21) == 'twenty one'
    assert digit_to_word_converter.number_to_words(100) == 'one hundred'
    assert digit_to_word_converter.number_to_words(101) == 'one hundred and one'
    assert digit_to_word_converter.number_to_words(110) == 'one hundred and ten'
    assert digit_to_word_converter.number_to_words(111) == 'one hundred and eleven'
    assert digit_to_word_converter.number_to_words(120) == 'one hundred and twenty'
    assert digit_to_word_converter.number_to_words(121) == 'one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1000) == 'one thousand'
    assert digit_to_word_converter.number_to_words(1001) == 'one thousand and one'
    assert digit_to_word_converter.number_to_words(1010) == 'one thousand and ten'
    assert digit_to_word_converter.number_to_words(1011) == 'one thousand and eleven'
    assert digit_to_word_converter.number_to_words(1020) == 'one thousand and twenty'
    assert digit_to_word_converter.number_to_words(1021) == 'one thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1100) == 'one thousand one hundred'
    assert digit_to_word_converter.number_to_words(1101) == 'one thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1110) == 'one thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1111) == 'one thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1120) == 'one thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1121) == 'one thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(10000) == 'ten thousand'
    assert digit_to_word_converter.number_to_words(10001) == 'ten thousand and one'
    assert digit_to_word_converter.number_to_words(10010) == 'ten thousand and ten'
    assert digit_to_word_converter.number_to_words(10011) == 'ten thousand and eleven'
    assert digit_to_word_converter.number_to_words(10020) == 'ten thousand and twenty'
    assert digit_to_word_converter.number_to_words(10021) == 'ten thousand and twenty one'
    assert digit_to_word_converter.number_to_words(10100) == 'ten thousand one hundred'
    assert digit_to_word_converter.number_to_words(10101) == 'ten thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(10110) == 'ten thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(10111) == 'ten thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(10120) == 'ten thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(10121) == 'ten thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(11000) == 'eleven thousand'
    assert digit_to_word_converter.number_to_words(11001) == 'eleven thousand and one'
    assert digit_to_word_converter.number_to_words(11010) == 'eleven thousand and ten'
    assert digit_to_word_converter.number_to_words(11011) == 'eleven thousand and eleven'
    assert digit_to_word_converter.number_to_words(11020) == 'eleven thousand and twenty'
    assert digit_to_word_converter.number_to_words(11021) == 'eleven thousand and twenty one'
    assert digit_to_word_converter.number_to_words(11100) == 'eleven thousand one hundred'
    assert digit_to_word_converter.number_to_words(11101) == 'eleven thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(11110) == 'eleven thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(11111) == 'eleven thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(11120) == 'eleven thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(11121) == 'eleven thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(20000) == 'twenty thousand'
    assert digit_to_word_converter.number_to_words(20001) == 'twenty thousand and one'
    assert digit_to_word_converter.number_to_words(20010) == 'twenty thousand and ten'
    assert digit_to_word_converter.number_to_words(20011) == 'twenty thousand and eleven'
    assert digit_to_word_converter.number_to_words(20020) == 'twenty thousand and twenty'
    assert digit_to_word_converter.number_to_words(20021) == 'twenty thousand and twenty one'
    assert digit_to_word_converter.number_to_words(20100) == 'twenty thousand one hundred'
    assert digit_to_word_converter.number_to_words(20101) == 'twenty thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(20110) == 'twenty thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(20111) == 'twenty thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(20120) == 'twenty thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(20121) == 'twenty thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(21000) == 'twenty one thousand'
    assert digit_to_word_converter.number_to_words(21001) == 'twenty one thousand and one'
    assert digit_to_word_converter.number_to_words(21010) == 'twenty one thousand and ten'
    assert digit_to_word_converter.number_to_words(21011) == 'twenty one thousand and eleven'
    assert digit_to_word_converter.number_to_words(21020) == 'twenty one thousand and twenty'
    assert digit_to_word_converter.number_to_words(21021) == 'twenty one thousand and twenty one'
    assert digit_to_word_converter.number_to_words(21100) == 'twenty one thousand one hundred'
    assert digit_to_word_converter.number_to_words(21101) == 'twenty one thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(21110) == 'twenty one thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(21111) == 'twenty one thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(21120) == 'twenty one thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(21121) == 'twenty one thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(100000) == 'one hundred thousand'
    assert digit_to_word_converter.number_to_words(100001) == 'one hundred thousand and one'
    assert digit_to_word_converter.number_to_words(100010) == 'one hundred thousand and ten'
    assert digit_to_word_converter.number_to_words(100011) == 'one hundred thousand and eleven'
    assert digit_to_word_converter.number_to_words(100020) == 'one hundred thousand and twenty'
    assert digit_to_word_converter.number_to_words(100021) == 'one hundred thousand and twenty one'
    assert digit_to_word_converter.number_to_words(100100) == 'one hundred thousand one hundred'
    assert digit_to_word_converter.number_to_words(100101) == 'one hundred thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(100110) == 'one hundred thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(100111) == 'one hundred thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(100120) == 'one hundred thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(100121) == 'one hundred thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(101000) == 'one hundred and one thousand'
    assert digit_to_word_converter.number_to_words(101001) == 'one hundred and one thousand and one'
    assert digit_to_word_converter.number_to_words(101010) == 'one hundred and one thousand and ten'
    assert digit_to_word_converter.number_to_words(101011) == 'one hundred and one thousand and eleven'
    assert digit_to_word_converter.number_to_words(101020) == 'one hundred and one thousand and twenty'
    assert digit_to_word_converter.number_to_words(101021) == 'one hundred and one thousand and twenty one'
    assert digit_to_word_converter.number_to_words(101100) == 'one hundred and one thousand one hundred'
    assert digit_to_word_converter.number_to_words(101101) == 'one hundred and one thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(101110) == 'one hundred and one thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(101111) == 'one hundred and one thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(101120) == 'one hundred and one thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(101121) == 'one hundred and one thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(110000) == 'one hundred and ten thousand'
    assert digit_to_word_converter.number_to_words(110001) == 'one hundred and ten thousand and one'
    assert digit_to_word_converter.number_to_words(110010) == 'one hundred and ten thousand and ten'
    assert digit_to_word_converter.number_to_words(110011) == 'one hundred and ten thousand and eleven'
    assert digit_to_word_converter.number_to_words(110020) == 'one hundred and ten thousand and twenty'
    assert digit_to_word_converter.number_to_words(110021) == 'one hundred and ten thousand and twenty one'
    assert digit_to_word_converter.number_to_words(110100) == 'one hundred and ten thousand one hundred'
    assert digit_to_word_converter.number_to_words(110101) == 'one hundred and ten thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(110110) == 'one hundred and ten thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(110111) == 'one hundred and ten thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(110120) == 'one hundred and ten thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(110121) == 'one hundred and ten thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(111000) == 'one hundred and eleven thousand'
    assert digit_to_word_converter.number_to_words(111001) == 'one hundred and eleven thousand and one'
    assert digit_to_word_converter.number_to_words(111010) == 'one hundred and eleven thousand and ten'
    assert digit_to_word_converter.number_to_words(111011) == 'one hundred and eleven thousand and eleven'
    assert digit_to_word_converter.number_to_words(111020) == 'one hundred and eleven thousand and twenty'
    assert digit_to_word_converter.number_to_words(111021) == 'one hundred and eleven thousand and twenty one'
    assert digit_to_word_converter.number_to_words(111100) == 'one hundred and eleven thousand one hundred'
    assert digit_to_word_converter.number_to_words(111101) == 'one hundred and eleven thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(111110) == 'one hundred and eleven thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(111111) == 'one hundred and eleven thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1000000) == 'one million'
    assert digit_to_word_converter.number_to_words(1000001) == 'one million and one'
    assert digit_to_word_converter.number_to_words(1000010) == 'one million and ten'
    assert digit_to_word_converter.number_to_words(1000011) == 'one million and eleven'
    assert digit_to_word_converter.number_to_words(1000020) == 'one million and twenty'
    assert digit_to_word_converter.number_to_words(1000021) == 'one million and twenty one'
    assert digit_to_word_converter.number_to_words(1000100) == 'one million one hundred'
    assert digit_to_word_converter.number_to_words(1000101) == 'one million one hundred and one'
    assert digit_to_word_converter.number_to_words(1000110) == 'one million one hundred and ten'
    assert digit_to_word_converter.number_to_words(1000111) == 'one million one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1000120) == 'one million one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1000121) == 'one million one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1000200) == 'one million two hundred'
    assert digit_to_word_converter.number_to_words(1000201) == 'one million two hundred and one'
    assert digit_to_word_converter.number_to_words(1000210) == 'one million two hundred and ten'
    assert digit_to_word_converter.number_to_words(1000211) == 'one million two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1000220) == 'one million two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1000221) == 'one million two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1001000) == 'one million one thousand'
    assert digit_to_word_converter.number_to_words(1001001) == 'one million one thousand and one'
    assert digit_to_word_converter.number_to_words(1001010) == 'one million one thousand and ten'
    assert digit_to_word_converter.number_to_words(1001011) == 'one million one thousand and eleven'
    assert digit_to_word_converter.number_to_words(1001020) == 'one million one thousand and twenty'
    assert digit_to_word_converter.number_to_words(1001021) == 'one million one thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1001100) == 'one million one thousand one hundred'
    assert digit_to_word_converter.number_to_words(1001101) == 'one million one thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1001110) == 'one million one thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1001111) == 'one million one thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1001120) == 'one million one thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1001121) == 'one million one thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1001200) == 'one million one thousand two hundred'
    assert digit_to_word_converter.number_to_words(1001201) == 'one million one thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1001210) == 'one million one thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1001211) == 'one million one thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1001220) == 'one million one thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1001221) == 'one million one thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1002000) == 'one million two thousand'
    assert digit_to_word_converter.number_to_words(1002001) == 'one million two thousand and one'
    assert digit_to_word_converter.number_to_words(1002010) == 'one million two thousand and ten'
    assert digit_to_word_converter.number_to_words(1002011) == 'one million two thousand and eleven'
    assert digit_to_word_converter.number_to_words(1002020) == 'one million two thousand and twenty'
    assert digit_to_word_converter.number_to_words(1002021) == 'one million two thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1002100) == 'one million two thousand one hundred'
    assert digit_to_word_converter.number_to_words(1002101) == 'one million two thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1002110) == 'one million two thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1002111) == 'one million two thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1002120) == 'one million two thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1002121) == 'one million two thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1002200) == 'one million two thousand two hundred'
    assert digit_to_word_converter.number_to_words(1002201) == 'one million two thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1002210) == 'one million two thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1002211) == 'one million two thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1002220) == 'one million two thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1002221) == 'one million two thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1010000) == 'one million ten thousand'
    assert digit_to_word_converter.number_to_words(1010001) == 'one million ten thousand and one'
    assert digit_to_word_converter.number_to_words(1010010) == 'one million ten thousand and ten'
    assert digit_to_word_converter.number_to_words(1010011) == 'one million ten thousand and eleven'
    assert digit_to_word_converter.number_to_words(1010020) == 'one million ten thousand and twenty'
    assert digit_to_word_converter.number_to_words(1010021) == 'one million ten thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1010100) == 'one million ten thousand one hundred'
    assert digit_to_word_converter.number_to_words(1010101) == 'one million ten thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1010110) == 'one million ten thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1010111) == 'one million ten thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1010120) == 'one million ten thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1010121) == 'one million ten thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1010200) == 'one million ten thousand two hundred'
    assert digit_to_word_converter.number_to_words(1010201) == 'one million ten thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1010210) == 'one million ten thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1010211) == 'one million ten thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1010220) == 'one million ten thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1010221) == 'one million ten thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1011000) == 'one million eleven thousand'
    assert digit_to_word_converter.number_to_words(1011001) == 'one million eleven thousand and one'
    assert digit_to_word_converter.number_to_words(1011010) == 'one million eleven thousand and ten'
    assert digit_to_word_converter.number_to_words(1011011) == 'one million eleven thousand and eleven'
    assert digit_to_word_converter.number_to_words(1011020) == 'one million eleven thousand and twenty'
    assert digit_to_word_converter.number_to_words(1011021) == 'one million eleven thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1011100) == 'one million eleven thousand one hundred'
    assert digit_to_word_converter.number_to_words(1011101) == 'one million eleven thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1011110) == 'one million eleven thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1011111) == 'one million eleven thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1011120) == 'one million eleven thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1011121) == 'one million eleven thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1011200) == 'one million eleven thousand two hundred'
    assert digit_to_word_converter.number_to_words(1011201) == 'one million eleven thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1011210) == 'one million eleven thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1011211) == 'one million eleven thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1011220) == 'one million eleven thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1011221) == 'one million eleven thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1020000) == 'one million twenty thousand'
    assert digit_to_word_converter.number_to_words(1020001) == 'one million twenty thousand and one'
    assert digit_to_word_converter.number_to_words(1020010) == 'one million twenty thousand and ten'
    assert digit_to_word_converter.number_to_words(1020011) == 'one million twenty thousand and eleven'
    assert digit_to_word_converter.number_to_words(1020020) == 'one million twenty thousand and twenty'
    assert digit_to_word_converter.number_to_words(1020021) == 'one million twenty thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1020100) == 'one million twenty thousand one hundred'
    assert digit_to_word_converter.number_to_words(1020101) == 'one million twenty thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1020110) == 'one million twenty thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1020111) == 'one million twenty thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1020120) == 'one million twenty thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1020121) == 'one million twenty thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1020200) == 'one million twenty thousand two hundred'
    assert digit_to_word_converter.number_to_words(1020201) == 'one million twenty thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1020210) == 'one million twenty thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1020211) == 'one million twenty thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1020220) == 'one million twenty thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1020221) == 'one million twenty thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1021000) == 'one million twenty one thousand'
    assert digit_to_word_converter.number_to_words(1021001) == 'one million twenty one thousand and one'
    assert digit_to_word_converter.number_to_words(1021010) == 'one million twenty one thousand and ten'
    assert digit_to_word_converter.number_to_words(1021011) == 'one million twenty one thousand and eleven'
    assert digit_to_word_converter.number_to_words(1021020) == 'one million twenty one thousand and twenty'
    assert digit_to_word_converter.number_to_words(1021021) == 'one million twenty one thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1021100) == 'one million twenty one thousand one hundred'
    assert digit_to_word_converter.number_to_words(1021101) == 'one million twenty one thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1021110) == 'one million twenty one thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1021111) == 'one million twenty one thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1021120) == 'one million twenty one thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1021121) == 'one million twenty one thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1021200) == 'one million twenty one thousand two hundred'
    assert digit_to_word_converter.number_to_words(1021201) == 'one million twenty one thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1021210) == 'one million twenty one thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1021211) == 'one million twenty one thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1021220) == 'one million twenty one thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1021221) == 'one million twenty one thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1100000) == 'one million one hundred thousand'
    assert digit_to_word_converter.number_to_words(1100001) == 'one million one hundred thousand and one'
    assert digit_to_word_converter.number_to_words(1100010) == 'one million one hundred thousand and ten'
    assert digit_to_word_converter.number_to_words(1100011) == 'one million one hundred thousand and eleven'
    assert digit_to_word_converter.number_to_words(1100020) == 'one million one hundred thousand and twenty'
    assert digit_to_word_converter.number_to_words(1100021) == 'one million one hundred thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1100100) == 'one million one hundred thousand one hundred'
    assert digit_to_word_converter.number_to_words(1100101) == 'one million one hundred thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1100110) == 'one million one hundred thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1100111) == 'one million one hundred thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1100120) == 'one million one hundred thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1100121) == 'one million one hundred thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1100200) == 'one million one hundred thousand two hundred'
    assert digit_to_word_converter.number_to_words(1100201) == 'one million one hundred thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1100210) == 'one million one hundred thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1100211) == 'one million one hundred thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1100220) == 'one million one hundred thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1100221) == 'one million one hundred thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1101000) == 'one million one hundred and one thousand'
    assert digit_to_word_converter.number_to_words(1101001) == 'one million one hundred and one thousand and one'
    assert digit_to_word_converter.number_to_words(1101010) == 'one million one hundred and one thousand and ten'
    assert digit_to_word_converter.number_to_words(1101011) == 'one million one hundred and one thousand and eleven'
    assert digit_to_word_converter.number_to_words(1101020) == 'one million one hundred and one thousand and twenty'
    assert digit_to_word_converter.number_to_words(1101021) == 'one million one hundred and one thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1101100) == 'one million one hundred and one thousand one hundred'
    assert digit_to_word_converter.number_to_words(1101101) == 'one million one hundred and one thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1101110) == 'one million one hundred and one thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1101111) == 'one million one hundred and one thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1101120) == 'one million one hundred and one thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1101121) == 'one million one hundred and one thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1101200) == 'one million one hundred and one thousand two hundred'
    assert digit_to_word_converter.number_to_words(1101201) == 'one million one hundred and one thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1101210) == 'one million one hundred and one thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1101211) == 'one million one hundred and one thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1101220) == 'one million one hundred and one thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1101221) == 'one million one hundred and one thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1102000) == 'one million one hundred and two thousand'
    assert digit_to_word_converter.number_to_words(1102001) == 'one million one hundred and two thousand and one'
    assert digit_to_word_converter.number_to_words(1102010) == 'one million one hundred and two thousand and ten'
    assert digit_to_word_converter.number_to_words(1102011) == 'one million one hundred and two thousand and eleven'
    assert digit_to_word_converter.number_to_words(1102020) == 'one million one hundred and two thousand and twenty'
    assert digit_to_word_converter.number_to_words(1102021) == 'one million one hundred and two thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1102100) == 'one million one hundred and two thousand one hundred'
    assert digit_to_word_converter.number_to_words(1102101) == 'one million one hundred and two thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1102110) == 'one million one hundred and two thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1102111) == 'one million one hundred and two thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1102120) == 'one million one hundred and two thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1102121) == 'one million one hundred and two thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1102200) == 'one million one hundred and two thousand two hundred'
    assert digit_to_word_converter.number_to_words(1102201) == 'one million one hundred and two thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1102210) == 'one million one hundred and two thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1102211) == 'one million one hundred and two thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1102220) == 'one million one hundred and two thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1102221) == 'one million one hundred and two thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1110000) == 'one million one hundred and ten thousand'
    assert digit_to_word_converter.number_to_words(1110001) == 'one million one hundred and ten thousand and one'
    assert digit_to_word_converter.number_to_words(1110010) == 'one million one hundred and ten thousand and ten'
    assert digit_to_word_converter.number_to_words(1110011) == 'one million one hundred and ten thousand and eleven'
    assert digit_to_word_converter.number_to_words(1110020) == 'one million one hundred and ten thousand and twenty'
    assert digit_to_word_converter.number_to_words(1110021) == 'one million one hundred and ten thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1110100) == 'one million one hundred and ten thousand one hundred'
    assert digit_to_word_converter.number_to_words(1110101) == 'one million one hundred and ten thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1110110) == 'one million one hundred and ten thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1110111) == 'one million one hundred and ten thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1110120) == 'one million one hundred and ten thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1110121) == 'one million one hundred and ten thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1110200) == 'one million one hundred and ten thousand two hundred'
    assert digit_to_word_converter.number_to_words(1110201) == 'one million one hundred and ten thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1110210) == 'one million one hundred and ten thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1110211) == 'one million one hundred and ten thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1110220) == 'one million one hundred and ten thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1110221) == 'one million one hundred and ten thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1111000) == 'one million one hundred and eleven thousand'
    assert digit_to_word_converter.number_to_words(1111001) == 'one million one hundred and eleven thousand and one'
    assert digit_to_word_converter.number_to_words(1111010) == 'one million one hundred and eleven thousand and ten'
    assert digit_to_word_converter.number_to_words(1111011) == 'one million one hundred and eleven thousand and eleven'
    assert digit_to_word_converter.number_to_words(1111020) == 'one million one hundred and eleven thousand and twenty'
    assert digit_to_word_converter.number_to_words(1111021) == 'one million one hundred and eleven thousand and twenty one'
    assert digit_to_word_converter.number_to_words(1111100) == 'one million one hundred and eleven thousand one hundred'
    assert digit_to_word_converter.number_to_words(1111101) == 'one million one hundred and eleven thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(1111110) == 'one million one hundred and eleven thousand one hundred and ten'
    assert digit_to_word_converter.number_to_words(1111111) == 'one million one hundred and eleven thousand one hundred and eleven'
    assert digit_to_word_converter.number_to_words(1111120) == 'one million one hundred and eleven thousand one hundred and twenty'
    assert digit_to_word_converter.number_to_words(1111121) == 'one million one hundred and eleven thousand one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(1111200) == 'one million one hundred and eleven thousand two hundred'
    assert digit_to_word_converter.number_to_words(1111201) == 'one million one hundred and eleven thousand two hundred and one'
    assert digit_to_word_converter.number_to_words(1111210) == 'one million one hundred and eleven thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(1111211) == 'one million one hundred and eleven thousand two hundred and eleven'
    assert digit_to_word_converter.number_to_words(1111220) == 'one million one hundred and eleven thousand two hundred and twenty'
    assert digit_to_word_converter.number_to_words(1111221) == 'one million one hundred and eleven thousand two hundred and twenty one'
    assert digit_to_word_converter.number_to_words(10000000) == 'ten million'
    assert digit_to_word_converter.number_to_words(10000001) == 'ten million and one'
    assert digit_to_word_converter.number_to_words(10000010) == 'ten million and ten'
    assert digit_to_word_converter.number_to_words(10000011) == 'ten million and eleven'
    assert digit_to_word_converter.number_to_words(10000020) == 'ten million and twenty'
    assert digit_to_word_converter.number_to_words(10000021) == 'ten million and twenty one'
    assert digit_to_word_converter.number_to_words(10000100) == 'ten million one hundred'
    assert digit_to_word_converter.number_to_words(10000101) == 'ten million one hundred and one'
    assert digit_to_word_converter.number_to_words(10000110) == 'ten million one hundred and ten'
    assert digit_to_word_converter.number_to_words(10000111) == 'ten million one hundred and eleven'
    assert digit_to_word_converter.number_to_words(10000120) == 'ten million one hundred and twenty'
    assert digit_to_word_converter.number_to_words(10000121) == 'ten million one hundred and twenty one'
    assert digit_to_word_converter.number_to_words(10001000) == 'ten million one thousand'
    assert digit_to_word_converter.number_to_words(10001001) == 'ten million one thousand and one'
    assert digit_to_word_converter.number_to_words(10010000) == 'ten million ten thousand'
    assert digit_to_word_converter.number_to_words(10010001) == 'ten million ten thousand and one'
    assert digit_to_word_converter.number_to_words(10100000) == 'ten million one hundred thousand'
    assert digit_to_word_converter.number_to_words(10100001) == 'ten million one hundred thousand and one'
    assert digit_to_word_converter.number_to_words(11000000) == 'eleven million'
    assert digit_to_word_converter.number_to_words(11000001) == 'eleven million and one'
    assert digit_to_word_converter.number_to_words(20000000) == 'twenty million'
    assert digit_to_word_converter.number_to_words(20000001) == 'twenty million and one'
    assert digit_to_word_converter.number_to_words(100000000) == 'one hundred million'
    assert digit_to_word_converter.number_to_words(100000001) == 'one hundred million and one'
    assert digit_to_word_converter.number_to_words(110000000) == 'one hundred and ten million'
    assert digit_to_word_converter.number_to_words(110000001) == 'one hundred and ten million and one'
    assert digit_to_word_converter.number_to_words(111000000) == 'one hundred and eleven million'
    assert digit_to_word_converter.number_to_words(111000001) == 'one hundred and eleven million and one'
    assert digit_to_word_converter.number_to_words(120000000) == 'one hundred and twenty million'
    assert digit_to_word_converter.number_to_words(120000001) == 'one hundred and twenty million and one'
    assert digit_to_word_converter.number_to_words(121000000) == 'one hundred and twenty one million'
    assert digit_to_word_converter.number_to_words(121000001) == 'one hundred and twenty one million and one'
    assert digit_to_word_converter.number_to_words(200000000) == 'two hundred million'
    assert digit_to_word_converter.number_to_words(200000001) == 'two hundred million and one'
    assert digit_to_word_converter.number_to_words(1000000000) == 'one billion'
    assert digit_to_word_converter.number_to_words(1000000001) == 'one billion and one'
    assert digit_to_word_converter.number_to_words(2000000000) == 'two billion'
    assert digit_to_word_converter.number_to_words(2000000001) == 'two billion and one'
    assert digit_to_word_converter.number_to_words(10000000000) == 'ten billion'
    assert digit_to_word_converter.number_to_words(10000000001) == 'ten billion and one'
    assert digit_to_word_converter.number_to_words(100000000000) == 'one hundred billion'
    assert digit_to_word_converter.number_to_words(100000000001) == 'one hundred billion and one'
    assert digit_to_word_converter.number_to_words(101010101010) == 'one hundred and one billion ten million one hundred and one thousand and ten'
    assert digit_to_word_converter.number_to_words(110101010101) == 'one hundred and ten billion one hundred and one million ten thousand one hundred and one'
    assert digit_to_word_converter.number_to_words(12) == 'twelve'
    assert digit_to_word_converter.number_to_words(123) == 'one hundred and twenty three'
    assert digit_to_word_converter.number_to_words(1234) == 'one thousand two hundred and thirty four'
    assert digit_to_word_converter.number_to_words(12345) == 'twelve thousand three hundred and forty five'
    assert digit_to_word_converter.number_to_words(123456) == 'one hundred and twenty three thousand four hundred and fifty six'
    assert digit_to_word_converter.number_to_words(1234567) == 'one million two hundred and thirty four thousand five hundred and sixty seven'
    assert digit_to_word_converter.number_to_words(12345678) == 'twelve million three hundred and forty five thousand six hundred and seventy eight'
    assert digit_to_word_converter.number_to_words(123456789) == 'one hundred and twenty three million four hundred and fifty six thousand seven hundred and eighty nine'
    assert digit_to_word_converter.number_to_words(1234567890) == 'one billion two hundred and thirty four million five hundred and sixty seven thousand eight hundred and ninety'
    assert digit_to_word_converter.number_to_words(12345678901) == 'twelve billion three hundred and forty five million six hundred and seventy eight thousand nine hundred and one'
    assert digit_to_word_converter.number_to_words(123456789012) == 'one hundred and twenty three billion four hundred and fifty six million seven hundred and eighty nine thousand and twelve'
    assert digit_to_word_converter.number_to_words(98) == 'ninety eight'
    assert digit_to_word_converter.number_to_words(987) == 'nine hundred and eighty seven'
    assert digit_to_word_converter.number_to_words(9876) == 'nine thousand eight hundred and seventy six'
    assert digit_to_word_converter.number_to_words(98765) == 'ninety eight thousand seven hundred and sixty five'
    assert digit_to_word_converter.number_to_words(987654) == 'nine hundred and eighty seven thousand six hundred and fifty four'
    assert digit_to_word_converter.number_to_words(9876543) == 'nine million eight hundred and seventy six thousand five hundred and forty three'
    assert digit_to_word_converter.number_to_words(98765432) == 'ninety eight million seven hundred and sixty five thousand four hundred and thirty two'
    assert digit_to_word_converter.number_to_words(987654321) == 'nine hundred and eighty seven million six hundred and fifty four thousand three hundred and twenty one'
    assert digit_to_word_converter.number_to_words(9876543210) == 'nine billion eight hundred and seventy six million five hundred and forty three thousand two hundred and ten'
    assert digit_to_word_converter.number_to_words(98765432109) == 'ninety eight billion seven hundred and sixty five million four hundred and thirty two thousand one hundred and nine'
    assert digit_to_word_converter.number_to_words(987654321098) == 'nine hundred and eighty seven billion six hundred and fifty four million three hundred and twenty one thousand and ninety eight'
    assert digit_to_word_converter.find_and_convert_numbers('I have 1 million dollars.') == 'I have one million dollars.'
    assert digit_to_word_converter.find_and_convert_numbers('I have 1000000 dollars.') == 'I have one million dollars.'
    assert digit_to_word_converter.find_and_convert_numbers('I have 1,000,000 dollars.') == 'I have one million dollars.'
    assert digit_to_word_converter.find_and_convert_numbers('I have 1,000,000,000 dollars.') == 'I have one billion dollars.'
    assert digit_to_word_converter.find_and_convert_numbers('Tomatoes have about 31 thousand genes.') == 'Tomatoes have about thirty one thousand genes.'
    assert digit_to_word_converter.find_and_convert_numbers('Tomatoes have about 31000 genes.') == 'Tomatoes have about thirty one thousand genes.'
    assert digit_to_word_converter.find_and_convert_numbers('Tomatoes have about 31,000 genes.') == 'Tomatoes have about thirty one thousand genes.'
    assert digit_to_word_converter.find_and_convert_numbers('Tomatoes have exactly 31760 genes.') == 'Tomatoes have exactly thirty one thousand seven hundred and sixty genes.'
    assert digit_to_word_converter.find_and_convert_numbers('Tomatoes have exactly 31,760 genes.') == 'Tomatoes have exactly thirty one thousand seven hundred and sixty genes.'
    assert digit_to_word_converter.find_and_convert_numbers('There are 33 species of small cats in the world and 41 species of felines in total.') == 'There are thirty three species of small cats in the world and forty one species of felines in total.'
    assert digit_to_word_converter.find_and_convert_numbers('The average daytime temperature in London is 15 degrees Celsius.') == 'The average daytime temperature in London is fifteen degrees Celsius.'
